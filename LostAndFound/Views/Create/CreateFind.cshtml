@model LostAndFound.Models.Find

@{
    ViewBag.Title = "CreateFind";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/camera.js"></script>
<script src="~/Scripts/jquery-ui.min.js"></script>

<script src='https://kit.fontawesome.com/a076d05399.js'></script>
<link href="~/Scripts/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Styles/CreateFind.css" rel="stylesheet" />
@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
<script type="text/javascript">
    $(document).ready(function () {
        //send category
        $("#category").change(function () {
            //$("#hiddenMainCategory").val($("#category").val());
            $("#categoryForm").submit();
        });
        var theAllOption = ($("<option>אחר</option>"));
        $("#categoryForm").submit(function (event) {
            event.preventDefault();
            var target = $(this);
            $.ajax({
                url: target.attr("action"),
                data: target.serialize(),
                success: function (data) {
                    $("#subCategories").empty();
                    $.each(data, function (i, value) {
                        $("#subCategories").append($("<option>" + JSON.stringify(value).split('"')[1] + "</option>"));
                    });
                    $("#subCategories").append(theAllOption);
                }
            });
        });
          //set dateNow
        dateNOW = function () {  year = @DateTime.Now.Year;
        month = @DateTime.Now.Month;
        if (month < 10)
            month = '0' + month;
         day = @DateTime.Now.Day;
        if (day < 10)
             day = '0' + day;
        date = year + "-" + month + "-" + day;

        $("#date").val(date);
        }
        dateNOW();
        //after changing date
        $("#date").change(
            function () {
                if ($(this).val() == "") {
                    year = @DateTime.Now.Year;
                     month = @DateTime.Now.Month;
                    if (month < 10)
                       month = '0' + month;
                    day = @DateTime.Now.Day;
                   if (day < 10)
                        day = '0' + day;
                   date = year + "-" + month + "-" + day;
                   $(this).val(date);
                }
            }
        );

        $('#dragableDiv').resizable({handles:  'n,w,s,e'});

    });
</script>
<h2>מציאה חדשה</h2>4
<form id="categoryForm" action="@Url.Action("SelectedHeadCategory", "Create")">

    <hr />
    <div class="form-group" style="margin-right:-11px;height: 33px">


        <div class="col-md-10">
            <select id="category" name="headCategory" class="form-control">
                @if (ViewBag.headCategories != null)
                {
                    foreach (var item in ViewBag.headCategories)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                }
            </select>
        </div> <label class="control-label col-md-2">קטגוריה</label>
    </div>
</form>
<form id="findform" enctype="multipart/form-data">
    @* @Html.AntiForgeryToken()*@

    <div class="form-horizontal">
        <div class="form-group">

            <div class="col-md-10">
                <select id="subCategories" name="subCategory" class="form-control">

                    @if (ViewBag.sub != null)
                    {
                        foreach (var item in ViewBag.sub)
                        {
                            <option>@item</option>
                        }
                    }
                    <option>אחר</option>
                </select>
            </div> @Html.LabelFor(model => model.subCategory, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="form-group">

            <div class="col-md-10">
                <select id="location" name="location" class="form-control">
                    @if (ViewBag.locations != null)
                    {
                        foreach (var item in ViewBag.locations)
                        {
                            <option value="@item.Id">@item.PlaceOrEvent</option>
                        }
                    }
                </select>
            </div>
            @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="form-group">

            <div class="col-md-10">
                <input type="date" class="form-control" id="date" name="dateFound" />

                @Html.ValidationMessageFor(model => model.dateFound, "", new { @class = "text-danger" })
            </div>@Html.LabelFor(model => model.dateFound, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="form-group">

            <div class="col-md-10">
                @* @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })*@
                <textarea class="form-control" name="description">
            </textarea>
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>  @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
            </div> @Html.LabelFor(model => model.notes, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.finderName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.finderName, "", new { @class = "text-danger" })
            </div>  @Html.LabelFor(model => model.finderName, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.cellphone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cellphone, "", new { @class = "text-danger" })
            </div> @Html.LabelFor(model => model.cellphone, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>  @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div>
            <div class="form-group">
                @* here will be hidden upload button *@
                <div class="input-group input-file">
                    <input id="uploadImage_btn" class="btn btn-default btn-choose" type="button" value="קובץ" />
                    <a class="btn btn-default btn-choose" id='openCamera'> Open cam</a>
                </div>
                <div id="displayPicture">
                    <img id="uploadedImage" src="#" alt="your image" hidden="hidden" />
                    <div id='cameraContainer' hidden="hidden">
                        <div id="vid" class='son'>
                            <video id='video'></video>
                        </div>
                        <div id="capture" class='son'>
                            <canvas id='canvas' name="webCamPicture"></canvas>
                        </div>
                        <div id="control">

                            <div class=""><a id='retake' class='btn hov'><i class="fas fa-sync-alt"></i></a></div>
                            <div class=""><a id='snap' class='btn hov'><i class="fas fa-camera"></i></a></div>

                        </div>
                    </div>
                </div>
            </div>
            <div id="coverInformation" onclick="saveCoverInformation()">
                saveCover
            </div>

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="savefind" type="submit" value="שמור מציאה" class="btn btn-default" style="position: relative;right: 141px" />
            </div>
        </div>
        <div style="text-align:center">
            @Html.ActionLink("חזור לדף הבית", "Index", "Home")
        </div>
    </div>
</form>
<!-- Draggable DIV -->
<div id="dragableDiv">

</div>
<script src="~/Controllers/drag.js"></script>



